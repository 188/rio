{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Sug",
				"SugarCursor"
			],
			[
				"line",
				"line_height"
			],
			[
				"li",
				"line_y"
			],
			[
				"font_lo",
				"fonts_to_load"
			],
			[
				"fon",
				"font_id"
			],
			[
				"pri",
				"println\tprintln!(…)"
			],
			[
				"cl",
				"clone"
			],
			[
				"ex",
				"extension"
			],
			[
				"PRO",
				"promoted"
			],
			[
				"fo",
				"font_id"
			],
			[
				"font",
				"font_data_extension"
			],
			[
				"pr",
				"println\tprintln!(…)"
			],
			[
				"fonts_",
				"fonts_to_load"
			],
			[
				"u",
				"usize"
			],
			[
				"Font",
				"FontSource"
			],
			[
				"Fo",
				"FontData"
			],
			[
				"Has",
				"HashSet"
			],
			[
				"fonts_to",
				"fonts_to_load"
			],
			[
				"fonts",
				"fonts_to_load"
			],
			[
				"cle",
				"clear"
			],
			[
				"to",
				"to_owned"
			],
			[
				"font_d",
				"font_data"
			],
			[
				"FontLi",
				"FontLibraryDataExtension"
			],
			[
				"exe",
				"extension_path"
			],
			[
				"De",
				"Default"
			],
			[
				"FontD",
				"FontDataLazy"
			],
			[
				"dro",
				"droppable"
			],
			[
				"curr",
				"current_font_id"
			],
			[
				"font_",
				"font_data"
			],
			[
				"pa",
				"path"
			],
			[
				"is",
				"is_emoji"
			],
			[
				"da",
				"data_ref"
			],
			[
				"dat",
				"data_ref"
			],
			[
				"as",
				"as_ref"
			],
			[
				"by",
				"font_by_id"
			],
			[
				"fal",
				"fallback"
			],
			[
				"Pa",
				"PathBuf"
			],
			[
				"Fontda",
				"FontDataLazy"
			],
			[
				"to_",
				"to_lowercase"
			],
			[
				"in",
				"into"
			],
			[
				"con",
				"context"
			],
			[
				"scale",
				"scale_context"
			],
			[
				"Sca",
				"ScaleContext"
			],
			[
				"sca",
				"scale_context"
			],
			[
				"sc",
				"scaler"
			],
			[
				"win",
				"window_id"
			],
			[
				"wind",
				"window_id"
			],
			[
				"O",
				"Option"
			],
			[
				"proce",
				"process_open_url"
			],
			[
				"use",
				"use_wa"
			],
			[
				"us",
				"use_wa"
			],
			[
				"wi",
				"window_id"
			],
			[
				"rou",
				"routes"
			],
			[
				"red",
				"redraw"
			],
			[
				"Mod",
				"ModifiersState"
			],
			[
				"for",
				"format"
			],
			[
				"modi",
				"modifiers_event"
			],
			[
				"mod",
				"modifiers"
			],
			[
				"Key",
				"KeyUp"
			],
			[
				"Ke",
				"KeyDown"
			],
			[
				"Modi",
				"Modifiers"
			],
			[
				"pal",
				"payload"
			],
			[
				"po",
				"point"
			],
			[
				"hi",
				"high_dpi"
			],
			[
				"di",
				"dimensions"
			],
			[
				"re",
				"return"
			],
			[
				"cur",
				"current"
			],
			[
				"em",
				"emoji"
			],
			[
				"FON",
				"font_data"
			],
			[
				"Fon",
				"FontData"
			],
			[
				"cone",
				"clone"
			],
			[
				"fot",
				"font_id"
			],
			[
				"STYL",
				"style"
			],
			[
				"REG",
				"FONT_ID_REGULAR"
			],
			[
				"FontRe",
				"FontDataRef"
			],
			[
				"At",
				"AtomicCounter"
			],
			[
				"de",
				"dead_code"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/Users/rapha/Documents/a/rio/NOTES",
			"settings":
			{
				"buffer_size": 565,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					2,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAADRAAAAIyAwLjEuMAoKLSBMaWdhdHVyYXMgcG9yIGNvbmZpZ3VyYWNhbwotIEFjZXJ0YXIgbyBzZWxlY3Rpb24KLSBBY2VydGFyIGxpbmsgKHVtYSB2ZXogZW5jb250cmFkbyBudW5jYSBtYWlzIG11ZGFyKQotIEZhemVyIHVtIGNhY2hlIHByYSBxdWFuZG8gcm9sYXIgbyBwcmVwYXJlICh0YSBsZXZhbmRvIGFzIHZlemVzIG1ldGFkZSBkbyB0ZW1wbyBwcmEgcmVuZGVyaXphcik",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAANEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3,
					1,
					"insert",
					{
						"characters": "-"
					},
					"AQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": " line-"
					},
					"BgAAAAEAAAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAAcAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": "gh"
					},
					"AgAAAAcAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAJAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAHAAAAAAAAAAcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					6,
					2,
					"left_delete",
					null,
					"AgAAAAgAAAAAAAAACAAAAAAAAAABAAAAaAcAAAAAAAAABwAAAAAAAAABAAAAZw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJAAAAAAAAAAkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": "height"
					},
					"BgAAAAcAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAJAAAAAAAAAAAAAAAJAAAAAAAAAAoAAAAAAAAAAAAAAAoAAAAAAAAACwAAAAAAAAAAAAAACwAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAA0AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAHAAAAAAAAAAcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": "\n-"
					},
					"AgAAAA0AAAAAAAAADgAAAAAAAAAAAAAADgAAAAAAAAAPAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAANAAAAAAAAAA0AAAAAAAAA////////738"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": " consertar"
					},
					"CgAAAA8AAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAARAAAAAAAAAAAAAAARAAAAAAAAABIAAAAAAAAAAAAAABIAAAAAAAAAEwAAAAAAAAAAAAAAEwAAAAAAAAAUAAAAAAAAAAAAAAAUAAAAAAAAABUAAAAAAAAAAAAAABUAAAAAAAAAFgAAAAAAAAAAAAAAFgAAAAAAAAAXAAAAAAAAAAAAAAAXAAAAAAAAABgAAAAAAAAAAAAAABgAAAAAAAAAGQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAPAAAAAAAAAA8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": " bug"
					},
					"BAAAABkAAAAAAAAAGgAAAAAAAAAAAAAAGgAAAAAAAAAbAAAAAAAAAAAAAAAbAAAAAAAAABwAAAAAAAAAAAAAABwAAAAAAAAAHQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAZAAAAAAAAABkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": " no"
					},
					"AwAAAB0AAAAAAAAAHgAAAAAAAAAAAAAAHgAAAAAAAAAfAAAAAAAAAAAAAAAfAAAAAAAAACAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAdAAAAAAAAAB0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": " yazi"
					},
					"BQAAACAAAAAAAAAAIQAAAAAAAAAAAAAAIQAAAAAAAAAiAAAAAAAAAAAAAAAiAAAAAAAAACMAAAAAAAAAAAAAACMAAAAAAAAAJAAAAAAAAAAAAAAAJAAAAAAAAAAlAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "\n-"
					},
					"AgAAACUAAAAAAAAAJgAAAAAAAAAAAAAAJgAAAAAAAAAnAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAlAAAAAAAAACUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": " ca"
					},
					"AwAAACcAAAAAAAAAKAAAAAAAAAAAAAAAKAAAAAAAAAApAAAAAAAAAAAAAAApAAAAAAAAACoAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAnAAAAAAAAACcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					20,
					1,
					"left_delete",
					null,
					"AQAAACkAAAAAAAAAKQAAAAAAAAABAAAAYQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAqAAAAAAAAACoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "haracter"
					},
					"CAAAACkAAAAAAAAAKgAAAAAAAAAAAAAAKgAAAAAAAAArAAAAAAAAAAAAAAArAAAAAAAAACwAAAAAAAAAAAAAACwAAAAAAAAALQAAAAAAAAAAAAAALQAAAAAAAAAuAAAAAAAAAAAAAAAuAAAAAAAAAC8AAAAAAAAAAAAAAC8AAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAAxAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAApAAAAAAAAACkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					24,
					1,
					"paste",
					null,
					"AgAAACgAAAAAAAAAMgAAAAAAAAAAAAAAMgAAAAAAAAAyAAAAAAAAAAkAAABjaGFyYWN0ZXI",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAxAAAAAAAAACgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADIAAAAAAAAAMwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAyAAAAAAAAADIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					27,
					1,
					"paste",
					null,
					"AQAAADMAAAAAAAAAXwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAzAAAAAAAAADMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAF8AAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAAABhAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABfAAAAAAAAAF8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					30,
					1,
					"paste",
					null,
					"AQAAAGEAAAAAAAAAIQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABhAAAAAAAAAGEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAGAAAAAAAAAAYQAAAAAAAAAAAAAAYQAAAAAAAABiAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABgAAAAAAAAAGAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "Exa"
					},
					"AwAAAGEAAAAAAAAAYgAAAAAAAAAAAAAAYgAAAAAAAABjAAAAAAAAAAAAAABjAAAAAAAAAGQAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABhAAAAAAAAAGEAAAAAAAAAAAAAAAAAAAA"
				],
				[
					36,
					1,
					"left_delete",
					null,
					"AQAAAGMAAAAAAAAAYwAAAAAAAAABAAAAYQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABkAAAAAAAAAGQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "emplo"
					},
					"BQAAAGMAAAAAAAAAZAAAAAAAAAAAAAAAZAAAAAAAAABlAAAAAAAAAAAAAABlAAAAAAAAAGYAAAAAAAAAAAAAAGYAAAAAAAAAZwAAAAAAAAAAAAAAZwAAAAAAAABoAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABjAAAAAAAAAGMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": " do"
					},
					"AwAAAGgAAAAAAAAAaQAAAAAAAAAAAAAAaQAAAAAAAABqAAAAAAAAAAAAAABqAAAAAAAAAGsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABoAAAAAAAAAGgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": " carlos:"
					},
					"CAAAAGsAAAAAAAAAbAAAAAAAAAAAAAAAbAAAAAAAAABtAAAAAAAAAAAAAABtAAAAAAAAAG4AAAAAAAAAAAAAAG4AAAAAAAAAbwAAAAAAAAAAAAAAbwAAAAAAAABwAAAAAAAAAAAAAABwAAAAAAAAAHEAAAAAAAAAAAAAAHEAAAAAAAAAcgAAAAAAAAAAAAAAcgAAAAAAAABzAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABrAAAAAAAAAGsAAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "/Users/rapha/Documents/a/rio/sugarloaf/src/components/rich_text/mod.rs",
			"settings":
			{
				"buffer_size": 22099,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					36,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAANFAAAAAAAAA1EAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADjQAAAAAAAAP1AAAAAAAAAAAAAAAAA8L8"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAAFBAAAAAAAAAkEAAAAAAAAAAAAAAkEAAAAAAAAKQQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAABQQAAAAAAAAFBAAAAAAAAAAAAAAAA8L8"
				],
				[
					43,
					1,
					"paste",
					null,
					"AQAAAApBAAAAAAAAOkEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAKQQAAAAAAAApBAAAAAAAAAAAAAAAA8L8"
				],
				[
					44,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAApBAAAAAAAACkEAAAAAAAADAAAALy8g",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA6QQAAAAAAADpBAAAAAAAAAAAAAAAA8L8"
				],
				[
					47,
					1,
					"left_delete",
					null,
					"AQAAABxBAAAAAAAAHEEAAAAAAAAaAAAAYXNjZW50ICsgZGVzY2VudCArIGxlYWRpbmc",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA2QQAAAAAAABxBAAAAAAAAAAAAAAAA8L8"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": "rect.e"
					},
					"BgAAABxBAAAAAAAAHUEAAAAAAAAAAAAAHUEAAAAAAAAeQQAAAAAAAAAAAAAeQQAAAAAAAB9BAAAAAAAAAAAAAB9BAAAAAAAAIEEAAAAAAAAAAAAAIEEAAAAAAAAhQQAAAAAAAAAAAAAhQQAAAAAAACJBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAcQQAAAAAAABxBAAAAAAAAAAAAAAAA8L8"
				],
				[
					49,
					1,
					"left_delete",
					null,
					"AQAAACFBAAAAAAAAIUEAAAAAAAABAAAAZQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAiQQAAAAAAACJBAAAAAAAAAAAAAAAA8L8"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": "he"
					},
					"AgAAACFBAAAAAAAAIkEAAAAAAAAAAAAAIkEAAAAAAAAjQQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAhQQAAAAAAACFBAAAAAAAAAAAAAAAA8L8"
				],
				[
					51,
					1,
					"insert_completion",
					{
						"completion": "height",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "height"
					},
					"AgAAACFBAAAAAAAAIUEAAAAAAAACAAAAaGUhQQAAAAAAACdBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAjQQAAAAAAACNBAAAAAAAAAAAAAAAA8L8"
				],
				[
					56,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAABVAAAAAAAAAGEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAtQAAAAAAAAC1AAAAAAAAAAAAAAAAA8L8"
				],
				[
					76,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAJZAAAAAAAAAmUAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACxQAAAAAAAAKpAAAAAAAAAAAAAAAAA8L8"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": "\nli"
					},
					"BAAAALVAAAAAAAAAtkAAAAAAAAAAAAAAtkAAAAAAAAC+QAAAAAAAAAAAAAC+QAAAAAAAAL9AAAAAAAAAAAAAAL9AAAAAAAAAwEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC1QAAAAAAAALVAAAAAAAAA////////738"
				],
				[
					84,
					1,
					"insert_completion",
					{
						"completion": "line_y",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "line_y"
					},
					"AgAAAL5AAAAAAAAAvkAAAAAAAAACAAAAbGm+QAAAAAAAAMRAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADAQAAAAAAAAMBAAAAAAAAAAAAAAAAA8L8"
				],
				[
					85,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAMRAAAAAAAAAxUAAAAAAAAAAAAAAxUAAAAAAAADGQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADEQAAAAAAAAMRAAAAAAAAAAAAAAAAA8L8"
				],
				[
					86,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMZAAAAAAAAAx0AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADGQAAAAAAAAMZAAAAAAAAAAAAAAAAA8L8"
				],
				[
					87,
					1,
					"paste",
					null,
					"AQAAAMdAAAAAAAAA0kAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADHQAAAAAAAAMdAAAAAAAAAAAAAAAAA8L8"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": "l"
					},
					"AQAAAMdAAAAAAAAAyEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADHQAAAAAAAAMdAAAAAAAAAAAAAAAAA8L8"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMhAAAAAAAAAyUAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADIQAAAAAAAAMhAAAAAAAAAAAAAAAAA8L8"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": "in"
					},
					"AgAAAMhAAAAAAAAAyUAAAAAAAAAAAAAAyUAAAAAAAADKQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADIQAAAAAAAAMhAAAAAAAAAAAAAAAAA8L8"
				],
				[
					97,
					1,
					"insert_completion",
					{
						"completion": "line_y",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "line_y"
					},
					"AgAAAMdAAAAAAAAAx0AAAAAAAAADAAAAbGlux0AAAAAAAADNQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADKQAAAAAAAAMpAAAAAAAAAAAAAAAAA8L8"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": " +"
					},
					"AgAAAM1AAAAAAAAAzkAAAAAAAAAAAAAAzkAAAAAAAADPQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADNQAAAAAAAAM1AAAAAAAAAAAAAAAAA8L8"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAANtAAAAAAAAA3EAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADbQAAAAAAAANtAAAAAAAAA////////738"
				],
				[
					102,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAG5AAAAAAAAAcUAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACMQAAAAAAAAIxAAAAAAAAAAAAAAADAeUA"
				],
				[
					105,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAOQ/AAAAAAAA5z8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAFQAAAAAAAAAVAAAAAAAAAAAAAAADAe0A"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": "rect."
					},
					"BgAAAHpEAAAAAAAAe0QAAAAAAAAAAAAAe0QAAAAAAAB7RAAAAAAAAAYAAABhc2NlbnR7RAAAAAAAAHxEAAAAAAAAAAAAAHxEAAAAAAAAfUQAAAAAAAAAAAAAfUQAAAAAAAB+RAAAAAAAAAAAAAB+RAAAAAAAAH9EAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB6RAAAAAAAAIBEAAAAAAAAAAAAAAAA8L8"
				],
				[
					118,
					1,
					"insert_completion",
					{
						"completion": "height",
						"format": "text",
						"keep_prefix": false,
						"must_insert": true,
						"trigger": "height"
					},
					"AQAAAH9EAAAAAAAAhUQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB/RAAAAAAAAH9EAAAAAAAAAAAAAAAA8L8"
				],
				[
					121,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAALU/AAAAAAAAuD8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADMPwAAAAAAAMw/AAAAAAAAAAAAAAAA8L8"
				],
				[
					124,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACZPwAAAAAAAJk/AAAAAAAAAAAAAAAA8L8"
				],
				[
					125,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACZPwAAAAAAAJk/AAAAAAAAAAAAAAAA8L8"
				],
				[
					140,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAALU/AAAAAAAAtT8AAAAAAAADAAAALy8g",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADXPwAAAAAAANc/AAAAAAAAAAAAAAAA8L8"
				],
				[
					149,
					1,
					"paste",
					null,
					"AgAAAHpEAAAAAAAAgEQAAAAAAAAAAAAAgEQAAAAAAACARAAAAAAAAAsAAAByZWN0LmhlaWdodA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB6RAAAAAAAAIVEAAAAAAAAAAAAAAAA8L8"
				],
				[
					178,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADcQQAAAAAAANxBAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "/Users/rapha/Documents/a/rio/pkgRio.nix",
			"settings":
			{
				"buffer_size": 2578,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					4,
					1,
					"cut",
					null,
					"AQAAAEkFAAAAAAAASQUAAAAAAAAVAAAAICAgIGRvQ2hlY2sgPSBmYWxzZTsK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABdBQAAAAAAAF0FAAAAAAAAAAAAAAAA8L8"
				],
				[
					5,
					1,
					"left_delete",
					null,
					"AQAAAEgFAAAAAAAASAUAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABJBQAAAAAAAEkFAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"contents": "use raw_window_handle::{HasDisplayHandle, HasWindowHandle};\nuse rio_window::application::ApplicationHandler;\nuse rio_window::event_loop::ControlFlow;\nuse rio_window::event_loop::{ActiveEventLoop, DeviceEvents};\nuse rio_window::window::{Window, WindowId};\nuse rio_window::{\n    dpi::LogicalSize, event::WindowEvent, event_loop::EventLoop, window::WindowAttributes,\n};\nuse std::error::Error;\nuse sugarloaf::{\n    layout::RootStyle, FragmentStyle, FragmentStyleDecoration, Object, RichText,\n    Sugarloaf, SugarCursor, SugarloafWindow, SugarloafWindowSize, UnderlineInfo, UnderlineShape,\n};\n\nfn main() {\n    let width = 600.0;\n    let height = 400.0;\n    let window_event_loop = rio_window::event_loop::EventLoop::new().unwrap();\n    let mut application = Application::new(&window_event_loop, width, height);\n    let _ = application.run(window_event_loop);\n}\n\nstruct Application {\n    sugarloaf: Option<Sugarloaf<'static>>,\n    window: Option<Window>,\n    height: f32,\n    width: f32,\n}\n\nimpl Application {\n    fn new(event_loop: &EventLoop<()>, width: f32, height: f32) -> Self {\n        event_loop.listen_device_events(DeviceEvents::Never);\n\n        Application {\n            sugarloaf: None,\n            window: None,\n            width,\n            height,\n        }\n    }\n\n    fn run(&mut self, event_loop: EventLoop<()>) -> Result<(), Box<dyn Error>> {\n        let result = event_loop.run_app(self);\n        result.map_err(Into::into)\n    }\n}\n\nimpl ApplicationHandler for Application {\n    fn resumed(&mut self, active_event_loop: &ActiveEventLoop) {\n        let window_attribute = WindowAttributes::default()\n            .with_title(\"Line height example\")\n            .with_inner_size(LogicalSize::new(self.width, self.height))\n            .with_resizable(true);\n        let window = active_event_loop.create_window(window_attribute).unwrap();\n\n        let scale_factor = window.scale_factor();\n        let font_size = 24.;\n\n        let line_height = 2.0;\n        let sugarloaf_layout =\n            RootStyle::new(scale_factor as f32, font_size, line_height);\n\n        let size = window.inner_size();\n        let sugarloaf_window = SugarloafWindow {\n            handle: window.window_handle().unwrap().into(),\n            display: window.display_handle().unwrap().into(),\n            scale: scale_factor as f32,\n            size: SugarloafWindowSize {\n                width: size.width as f32,\n                height: size.height as f32,\n            },\n        };\n\n        let mut sugarloaf = Sugarloaf::new(\n            sugarloaf_window,\n            sugarloaf::SugarloafRenderer::default(),\n            &sugarloaf::font::FontLibrary::default(),\n            sugarloaf_layout,\n        )\n        .expect(\"Sugarloaf instance should be created\");\n\n        sugarloaf.set_background_color(Some(wgpu::Color::RED));\n        sugarloaf.create_rich_text();\n        window.request_redraw();\n\n        self.sugarloaf = Some(sugarloaf);\n        self.window = Some(window);\n    }\n\n    fn window_event(\n        &mut self,\n        event_loop: &ActiveEventLoop,\n        _window_id: WindowId,\n        event: WindowEvent,\n    ) {\n        if self.sugarloaf.is_none() || self.window.is_none() {\n            return;\n        }\n\n        let sugarloaf = self.sugarloaf.as_mut().unwrap();\n        let window = self.window.as_mut().unwrap();\n\n        match event {\n            WindowEvent::CloseRequested => event_loop.exit(),\n            WindowEvent::ScaleFactorChanged {\n                // mut inner_size_writer,\n                scale_factor,\n                ..\n            } => {\n                let scale_factor_f32 = scale_factor as f32;\n                let new_inner_size = window.inner_size();\n                sugarloaf.rescale(scale_factor_f32);\n                sugarloaf.resize(new_inner_size.width, new_inner_size.height);\n                window.request_redraw();\n            }\n            WindowEvent::Resized(new_size) => {\n                sugarloaf.resize(new_size.width, new_size.height);\n                window.request_redraw();\n            }\n            WindowEvent::RedrawRequested { .. } => {\n                let content = sugarloaf.content();\n                content.sel(0).clear();\n                content\n                    .new_line()\n                    .add_text(\n                        \"Sugarloaf\",\n                        FragmentStyle {\n                            color: [1.0, 1.0, 1.0, 1.0],\n                            background_color: Some([0.0, 0.0, 0.0, 1.0]),\n                            ..FragmentStyle::default()\n                        },\n                    )\n                    .new_line()\n                    .add_text(\n                        \"│㏑¼\",\n                        FragmentStyle {\n                            color: [0.0, 0.0, 0.0, 1.0],\n                            background_color: Some([1.0, 1.0, 1.0, 1.0]),\n                            width: 2.0,\n                            ..FragmentStyle::default()\n                        },\n                    )\n                    .add_text(\n                        \"🥶\",\n                        FragmentStyle {\n                            color: [1.0, 0.0, 1.0, 1.0],\n                            background_color: Some([0.3, 0.5, 1.0, 1.0]),\n                            width: 2.0,\n                            ..FragmentStyle::default()\n                        },\n                    )\n                    .new_line()\n                    .add_text(\n                        \"│regular -> \",\n                        FragmentStyle {\n                            decoration: Some(FragmentStyleDecoration::Underline(\n                                UnderlineInfo {\n                                    offset: -2.0,\n                                    size: 1.0,\n                                    is_doubled: false,\n                                    shape: UnderlineShape::Regular,\n                                },\n                            )),\n                            color: [1.0, 1.0, 1.0, 1.0],\n                            background_color: Some([0.0, 0.0, 0.0, 1.0]),\n                            ..FragmentStyle::default()\n                        },\n                    )\n                    .add_text(\n                        \" \",\n                        FragmentStyle {\n                            decoration: None,\n                            color: [1.0, 1.0, 1.0, 1.0],\n                            background_color: Some([0.0, 0.0, 0.0, 1.0]),\n                            ..FragmentStyle::default()\n                        },\n                    )\n                    .add_text(\n                        \"|still|\",\n                        FragmentStyle {\n                            decoration: Some(FragmentStyleDecoration::Underline(\n                                UnderlineInfo {\n                                    offset: -2.0,\n                                    size: 1.0,\n                                    is_doubled: false,\n                                    shape: UnderlineShape::Regular,\n                                },\n                            )),\n                            color: [1.0, 1.0, 1.0, 1.0],\n                            background_color: Some([0.0, 0.0, 0.0, 1.0]),\n                            ..FragmentStyle::default()\n                        },\n                    )\n                    .add_text(\n                        \" \",\n                        FragmentStyle {\n                            decoration: None,\n                            color: [1.0, 1.0, 1.0, 1.0],\n                            background_color: Some([0.0, 0.0, 0.0, 1.0]),\n                            ..FragmentStyle::default()\n                        },\n                    )\n                    .add_text(\n                        \"│curly\",\n                        FragmentStyle {\n                            decoration: Some(FragmentStyleDecoration::Underline(\n                                UnderlineInfo {\n                                    offset: -2.0,\n                                    size: 1.0,\n                                    is_doubled: false,\n                                    shape: UnderlineShape::Curly,\n                                },\n                            )),\n                            color: [1.0, 1.0, 1.0, 1.0],\n                            background_color: Some([0.0, 0.0, 0.0, 1.0]),\n                            ..FragmentStyle::default()\n                        },\n                    )\n                    .new_line()\n                    .add_text(\n                        \"│dashed\",\n                        FragmentStyle {\n                            decoration: Some(FragmentStyleDecoration::Underline(\n                                UnderlineInfo {\n                                    offset: -2.0,\n                                    size: 1.0,\n                                    is_doubled: false,\n                                    shape: UnderlineShape::Dashed,\n                                },\n                            )),\n                            color: [1.0, 1.0, 1.0, 1.0],\n                            background_color: Some([0.0, 0.0, 0.0, 1.0]),\n                            ..FragmentStyle::default()\n                        },\n                    )\n                    .add_text(\n                        \" \",\n                        FragmentStyle {\n                            decoration: None,\n                            color: [1.0, 1.0, 1.0, 1.0],\n                            background_color: Some([0.0, 0.0, 0.0, 1.0]),\n                            ..FragmentStyle::default()\n                        },\n                    )\n                    .add_text(\n                        \"dotted\",\n                        FragmentStyle {\n                            decoration: Some(FragmentStyleDecoration::Underline(\n                                UnderlineInfo {\n                                    offset: -2.0,\n                                    size: 1.0,\n                                    is_doubled: false,\n                                    shape: UnderlineShape::Dotted,\n                                },\n                            )),\n                            color: [1.0, 1.0, 1.0, 1.0],\n                            background_color: Some([0.0, 0.0, 0.0, 1.0]),\n                            ..FragmentStyle::default()\n                        },\n                    )\n                    .new_line()\n                    .add_text(\n                        \"│ \\u{E0B6}Hello There!\\u{e0b4}\",\n                        FragmentStyle {\n                            color: [1.0, 1.0, 1.0, 1.0],\n                            background_color: Some([0.5, 0.5, 1.0, 1.0]),\n                            ..FragmentStyle::default()\n                        },\n                    )\n                    .add_text(\n                        \"?\",\n                        FragmentStyle {\n                            color: [0.5, 0.5, 1.0, 1.0],\n                            background_color: Some([1.0, 1.0, 1.0, 1.0]),\n                            cursor: Some(SugarCursor::Block([1.0, 1.0, 1.0, 1.0])),\n                            ..FragmentStyle::default()\n                        },\n                    )\n                    .build();\n\n                sugarloaf.set_objects(vec![Object::RichText(RichText {\n                    id: 0,\n                    position: [10., 0.],\n                })]);\n                sugarloaf.render();\n                event_loop.set_control_flow(ControlFlow::Wait);\n            }\n            _ => (),\n        }\n    }\n}\n",
			"file": "/Users/rapha/Documents/a/rio/sugarloaf/examples/line_height.rs",
			"file_size": 11526,
			"file_write_time": 133789560807006437,
			"settings":
			{
				"buffer_size": 11510,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAOwpAAAAAAAA7SkAAAAAAAAAAAAA7SkAAAAAAAABKgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADsKQAAAAAAAOwpAAAAAAAAAAAAAAAA8L8"
				],
				[
					6,
					1,
					"paste",
					null,
					"AQAAAAEqAAAAAAAAWCsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAABKgAAAAAAAAEqAAAAAAAAAAAAAAAA8L8"
				],
				[
					11,
					1,
					"left_delete",
					null,
					"AQAAACUqAAAAAAAAJSoAAAAAAAAgAAAA4pSCIFx1e0UwQjZ9SGVsbG8gVGhlcmUhXHV7ZTBiNH0",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAlKgAAAAAAAEMqAAAAAAAAAAAAAAAA8L8"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "?"
					},
					"AQAAACUqAAAAAAAAJioAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAlKgAAAAAAACUqAAAAAAAAAAAAAAAA8L8"
				],
				[
					24,
					1,
					"paste",
					null,
					"AQAAAL0qAAAAAAAA0ioAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC9KgAAAAAAAL0qAAAAAAAAAAAAAAAA8L8"
				],
				[
					34,
					1,
					"left_delete",
					null,
					"AQAAANIqAAAAAAAA0ioAAAAAAAAUAAAAWzAuNSwgMC41LCAxLjAsIDEuMF0",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADSKgAAAAAAAOYqAAAAAAAAAAAAAAAA8L8"
				],
				[
					40,
					1,
					"left_delete",
					null,
					"AQAAAHQqAAAAAAAAdCoAAAAAAAAUAAAAWzEuMCwgMS4wLCAxLjAsIDEuMF0",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIKgAAAAAAAHQqAAAAAAAAAAAAAAAA8L8"
				],
				[
					41,
					1,
					"paste",
					null,
					"AQAAAHQqAAAAAAAAiCoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB0KgAAAAAAAHQqAAAAAAAAAAAAAAAA8L8"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": "\ncu"
					},
					"BAAAANQqAAAAAAAA1SoAAAAAAAAAAAAA1SoAAAAAAADxKgAAAAAAAAAAAADxKgAAAAAAAPIqAAAAAAAAAAAAAPIqAAAAAAAA8yoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADUKgAAAAAAANQqAAAAAAAA////////738"
				],
				[
					46,
					2,
					"left_delete",
					null,
					"AgAAAPIqAAAAAAAA8ioAAAAAAAABAAAAdfEqAAAAAAAA8SoAAAAAAAABAAAAYw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADzKgAAAAAAAPMqAAAAAAAAAAAAAAAA8L8"
				],
				[
					52,
					1,
					"paste",
					null,
					"AQAAAPEqAAAAAAAAdCwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADxKgAAAAAAAPEqAAAAAAAAAAAAAAAA8L8"
				],
				[
					64,
					2,
					"left_delete",
					null,
					"AgAAAPIqAAAAAAAA8ioAAAAAAAAKAAAAZGVjb3JhdGlvbvEqAAAAAAAA8SoAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADyKgAAAAAAAPwqAAAAAAAAAAAAAAAA8L8"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": "cursor"
					},
					"BgAAAPEqAAAAAAAA8ioAAAAAAAAAAAAA8ioAAAAAAADzKgAAAAAAAAAAAADzKgAAAAAAAPQqAAAAAAAAAAAAAPQqAAAAAAAA9SoAAAAAAAAAAAAA9SoAAAAAAAD2KgAAAAAAAAAAAAD2KgAAAAAAAPcqAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADxKgAAAAAAAPEqAAAAAAAAAAAAAAAA8L8"
				],
				[
					69,
					1,
					"left_delete",
					null,
					"AQAAAP4qAAAAAAAA/ioAAAAAAAAXAAAARnJhZ21lbnRTdHlsZURlY29yYXRpb24",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD+KgAAAAAAABUrAAAAAAAAAAAAAAAA8L8"
				],
				[
					70,
					1,
					"paste",
					null,
					"AQAAAP4qAAAAAAAACSsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD+KgAAAAAAAP4qAAAAAAAAAAAAAAAA8L8"
				],
				[
					73,
					1,
					"left_delete",
					null,
					"AQAAAAsrAAAAAAAACysAAAAAAAAJAAAAVW5kZXJsaW5l",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAUKwAAAAAAAAsrAAAAAAAAAAAAAAAA8L8"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": "Block"
					},
					"BQAAAAsrAAAAAAAADCsAAAAAAAAAAAAADCsAAAAAAAANKwAAAAAAAAAAAAANKwAAAAAAAA4rAAAAAAAAAAAAAA4rAAAAAAAADysAAAAAAAAAAAAADysAAAAAAAAQKwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAALKwAAAAAAAAsrAAAAAAAAAAAAAAAA8L8"
				],
				[
					84,
					1,
					"paste",
					null,
					"AQAAABErAAAAAAAAJSsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAARKwAAAAAAABErAAAAAAAAAAAAAAAIiEA"
				],
				[
					85,
					1,
					"insert",
					{
						"characters": "),"
					},
					"AgAAACUrAAAAAAAAJisAAAAAAAAAAAAAJisAAAAAAAAnKwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAlKwAAAAAAACUrAAAAAAAAAAAAAAAA8L8"
				],
				[
					87,
					7,
					"cut",
					null,
					"BwAAACgrAAAAAAAAKCsAAAAAAAAwAAAAICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBVbmRlcmxpbmVJbmZvIHsKKCsAAAAAAAAoKwAAAAAAADIAAAAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvZmZzZXQ6IC0yLjAsCigrAAAAAAAAKCsAAAAAAAAvAAAAICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2l6ZTogMS4wLAooKwAAAAAAACgrAAAAAAAANwAAACAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzX2RvdWJsZWQ6IGZhbHNlLAooKwAAAAAAACgrAAAAAAAAQwAAACAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNoYXBlOiBVbmRlcmxpbmVTaGFwZTo6RG90dGVkLAooKwAAAAAAACgrAAAAAAAAIwAAACAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKKCsAAAAAAAAoKwAAAAAAACAAAAAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSksCg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABXKwAAAAAAAFcrAAAAAAAAAAAAAADIi0A"
				],
				[
					91,
					1,
					"left_delete",
					null,
					"AQAAANEqAAAAAAAA0SoAAAAAAAABAAAALA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADSKgAAAAAAANIqAAAAAAAAAAAAAAAA8L8"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAACUrAAAAAAAAJisAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAlKwAAAAAAACUrAAAAAAAAAAAAAAAA8L8"
				],
				[
					103,
					1,
					"insert",
					{
						"characters": " Sug"
					},
					"BAAAAPYBAAAAAAAA9wEAAAAAAAAAAAAA9wEAAAAAAAD4AQAAAAAAAAAAAAD4AQAAAAAAAPkBAAAAAAAAAAAAAPkBAAAAAAAA+gEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD2AQAAAAAAAPYBAAAAAAAAAAAAAAAA8L8"
				],
				[
					106,
					1,
					"insert_completion",
					{
						"completion": "SugarCursor",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "SugarCursor"
					},
					"AgAAAPcBAAAAAAAA9wEAAAAAAAADAAAAU3Vn9wEAAAAAAAACAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD6AQAAAAAAAPoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					107,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAAICAAAAAAAAAwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAACAgAAAAAAAAICAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "/Users/rapha/Documents/a/rio/sugarloaf/src/layout/content.rs",
			"settings":
			{
				"buffer_size": 19461,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					15,
					1,
					"insert",
					{
						"characters": " *"
					},
					"AgAAAGUjAAAAAAAAZiMAAAAAAAAAAAAAZiMAAAAAAABnIwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABlIwAAAAAAAGUjAAAAAAAAAAAAAAAA8L8"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGcjAAAAAAAAaCMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABnIwAAAAAAAGcjAAAAAAAAAAAAAAAA8L8"
				],
				[
					17,
					1,
					"paste",
					null,
					"AQAAAGgjAAAAAAAAciMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABoIwAAAAAAAGgjAAAAAAAAAAAAAAAA8L8"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": ".di"
					},
					"AwAAAHIjAAAAAAAAcyMAAAAAAAAAAAAAcyMAAAAAAAB0IwAAAAAAAAAAAAB0IwAAAAAAAHUjAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAByIwAAAAAAAHIjAAAAAAAAAAAAAAAA8L8"
				],
				[
					19,
					1,
					"insert_completion",
					{
						"completion": "dimensions",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "dimensions"
					},
					"AgAAAHMjAAAAAAAAcyMAAAAAAAACAAAAZGlzIwAAAAAAAH0jAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB1IwAAAAAAAHUjAAAAAAAAAAAAAAAA8L8"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": ".line"
					},
					"BQAAAH0jAAAAAAAAfiMAAAAAAAAAAAAAfiMAAAAAAAB/IwAAAAAAAAAAAAB/IwAAAAAAAIAjAAAAAAAAAAAAAIAjAAAAAAAAgSMAAAAAAAAAAAAAgSMAAAAAAACCIwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB9IwAAAAAAAH0jAAAAAAAAAAAAAAAA8L8"
				],
				[
					23,
					1,
					"insert_completion",
					{
						"completion": "line_height",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "line_height"
					},
					"AgAAAH4jAAAAAAAAfiMAAAAAAAAEAAAAbGluZX4jAAAAAAAAiSMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACCIwAAAAAAAIIjAAAAAAAAAAAAAAAA8L8"
				],
				[
					26,
					1,
					"left_delete",
					null,
					"AQAAAHMjAAAAAAAAcyMAAAAAAAALAAAAZGltZW5zaW9ucy4",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB+IwAAAAAAAHMjAAAAAAAAAAAAAAAA8L8"
				],
				[
					43,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAIAAAARAwAAAAAAABwDAAAAAAAAAAAAAAAA8L/7FgAAAAAAAAYXAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "/Users/rapha/Documents/a/rio/sugarloaf/src/lib.rs",
			"redo_stack":
			[
				[
					8,
					1,
					"insert",
					{
						"characters": "content"
					},
					"EAAAAFwAAAAAAAAAXAAAAAAAAAABAAAAdF4CAAAAAAAAXgIAAAAAAAABAAAAdFsAAAAAAAAAWwAAAAAAAAABAAAAblwCAAAAAAAAXAIAAAAAAAABAAAAbloAAAAAAAAAWgAAAAAAAAABAAAAZVoCAAAAAAAAWgIAAAAAAAABAAAAZVkAAAAAAAAAWQAAAAAAAAABAAAAdFgCAAAAAAAAWAIAAAAAAAABAAAAdFgAAAAAAAAAWAAAAAAAAAABAAAAblYCAAAAAAAAVgIAAAAAAAABAAAAblcAAAAAAAAAVwAAAAAAAAABAAAAb1QCAAAAAAAAVAIAAAAAAAABAAAAb1cAAAAAAAAAXQAAAAAAAAAAAAAAVgAAAAAAAABWAAAAAAAAAAEAAABjWQIAAAAAAABfAgAAAAAAAAAAAABYAgAAAAAAAFgCAAAAAAAAAQAAAGM",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAIAAABdAAAAAAAAAF0AAAAAAAAAAAAAAAAA8L9gAgAAAAAAAGACAAAAAAAAAAAAAAAA8L8"
				]
			],
			"settings":
			{
				"buffer_size": 718,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/rapha/Documents/a/rio/sugarloaf/Cargo.toml",
			"settings":
			{
				"buffer_size": 6744,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					10,
					1,
					"paste",
					null,
					"AgAAAKcDAAAAAAAAuwMAAAAAAAAAAAAAuwMAAAAAAAC7AwAAAAAAAC8AAAB7IHZlcnNpb24gPSAiMS4xNy4wIiwgZmVhdHVyZXMgPSBbICJkZXJpdmUiIF0gfQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACnAwAAAAAAANYDAAAAAAAA////////738"
				],
				[
					13,
					1,
					"paste",
					null,
					"AgAAAMYDAAAAAAAA2gMAAAAAAAAAAAAA2gMAAAAAAADaAwAAAAAAAAgAAAAiMC4xLjQwIg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADOAwAAAAAAAMYDAAAAAAAAAAAAAAAA8L8"
				],
				[
					25,
					1,
					"paste",
					null,
					"AgAAAO0EAAAAAAAAAQUAAAAAAAAAAAAAAQUAAAAAAAABBQAAAAAAAAcAAAAiMC4yLjAi",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADtBAAAAAAAAPQEAAAAAAAA////////738"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "26"
					},
					"AwAAAEgGAAAAAAAASQYAAAAAAAAAAAAASQYAAAAAAABJBgAAAAAAAAIAAAAyNUkGAAAAAAAASgYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABIBgAAAAAAAEoGAAAAAAAAAAAAAAAA8L8"
				],
				[
					37,
					1,
					"left_delete",
					null,
					"AQAAAEsGAAAAAAAASwYAAAAAAAABAAAAMA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABMBgAAAAAAAEwGAAAAAAAAAAAAAAAA8L8"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAEsGAAAAAAAATAYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABLBgAAAAAAAEsGAAAAAAAAAAAAAAAA8L8"
				],
				[
					43,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAACBQAAAAAAAA0FAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "/Users/rapha/Documents/a/rio/frontends/rioterm/src/bindings/mod.rs",
			"settings":
			{
				"buffer_size": 64085,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					200,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA+UcAAAAAAACRRwAAAAAAAAAAAAAAwFVA"
				]
			]
		},
		{
			"file": "/Users/rapha/Documents/a/rio/frontends/rioterm/src/context/grid.rs",
			"redo_stack":
			[
				[
					242,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAOs1AAAAAAAA6zUAAAAAAAABAAAAXw",
					"AQAAAAAAAAABAAAA7DUAAAAAAADsNQAAAAAAAAAAAAAAAPC/"
				],
				[
					238,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AgAAAOc1AAAAAAAA6jUAAAAAAAAAAAAA5zUAAAAAAADnNQAAAAAAAAMAAAAvLyA",
					"AQAAAAAAAAABAAAA9DUAAAAAAAD0NQAAAAAAAAAAAAAAAPC/"
				],
				[
					236,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAFg2AAAAAAAAWDYAAAAAAAADAAAALy8g",
					"AQAAAAAAAAABAAAAbDYAAAAAAABsNgAAAAAAAAAAAAAAAPC/"
				]
			],
			"settings":
			{
				"buffer_size": 122996,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					66,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"",
					"AQAAAAAAAAABAAAAmoQAAAAAAAA3xgEAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"LwAAAEyLAAAAAAAATIsAAAAAAAADAAAALy8gPosAAAAAAAA+iwAAAAAAAAMAAAAvLyAriwAAAAAAACuLAAAAAAAAAwAAAC8vIAKLAAAAAAAAAosAAAAAAAADAAAALy8g3YoAAAAAAADdigAAAAAAAAMAAAAvLyCtigAAAAAAAK2KAAAAAAAAAwAAAC8vII6KAAAAAAAAjooAAAAAAAADAAAALy8gd4oAAAAAAAB3igAAAAAAAAMAAAAvLyBKigAAAAAAAEqKAAAAAAAAAwAAAC8vIAqKAAAAAAAACooAAAAAAAADAAAALy8g4IkAAAAAAADgiQAAAAAAAAMAAAAvLyCriQAAAAAAAKuJAAAAAAAAAwAAAC8vIHmJAAAAAAAAeYkAAAAAAAADAAAALy8gOYkAAAAAAAA5iQAAAAAAAAMAAAAvLyDeiAAAAAAAAN6IAAAAAAAAAwAAAC8vIKSIAAAAAAAApIgAAAAAAAADAAAALy8gaogAAAAAAABqiAAAAAAAAAMAAAAvLyAyiAAAAAAAADKIAAAAAAAAAwAAAC8vICSIAAAAAAAAJIgAAAAAAAADAAAALy8gAogAAAAAAAACiAAAAAAAAAMAAAAvLyDlhwAAAAAAAOWHAAAAAAAAAwAAAC8vIMyHAAAAAAAAzIcAAAAAAAADAAAALy8gqocAAAAAAACqhwAAAAAAAAMAAAAvLyCKhwAAAAAAAIqHAAAAAAAAAwAAAC8vIFyHAAAAAAAAXIcAAAAAAAADAAAALy8gP4cAAAAAAAA/hwAAAAAAAAMAAAAvLyAehwAAAAAAAB6HAAAAAAAAAwAAAC8vIOqGAAAAAAAA6oYAAAAAAAADAAAALy8gtIYAAAAAAAC0hgAAAAAAAAMAAAAvLyClhgAAAAAAAKWGAAAAAAAAAwAAAC8vIH2GAAAAAAAAfYYAAAAAAAADAAAALy8gaYYAAAAAAABphgAAAAAAAAMAAAAvLyBXhgAAAAAAAFeGAAAAAAAAAwAAAC8vIDiGAAAAAAAAOIYAAAAAAAADAAAALy8gGYYAAAAAAAAZhgAAAAAAAAMAAAAvLyD7hQAAAAAAAPuFAAAAAAAAAwAAAC8vINqFAAAAAAAA2oUAAAAAAAADAAAALy8gxIUAAAAAAADEhQAAAAAAAAMAAAAvLyCthQAAAAAAAK2FAAAAAAAAAwAAAC8vIHGFAAAAAAAAcYUAAAAAAAADAAAALy8gYoUAAAAAAABihQAAAAAAAAMAAAAvLyBEhQAAAAAAAESFAAAAAAAAAwAAAC8vICmFAAAAAAAAKYUAAAAAAAADAAAALy8gEoUAAAAAAAAShQAAAAAAAAMAAAAvLyDyhAAAAAAAAPKEAAAAAAAAAwAAAC8vIKmEAAAAAAAAqYQAAAAAAAADAAAALy8gmoQAAAAAAACahAAAAAAAAAMAAAAvLyA",
					"AQAAAAAAAAABAAAAmoQAAAAAAABRiwAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAE82AAAAAAAAUDYAAAAAAAAAAAAAUDYAAAAAAABcNgAAAAAAAAAAAABcNgAAAAAAAF02AAAAAAAAAAAAAF02AAAAAAAAaTYAAAAAAAAAAAAAUDYAAAAAAABQNgAAAAAAAAwAAAAgICAgICAgICAgICA",
					"AQAAAAAAAAABAAAATzYAAAAAAABPNgAAAAAAAP///////+9/"
				],
				[
					92,
					1,
					"left_delete",
					null,
					"AQAAAFk2AAAAAAAAWTYAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAXTYAAAAAAABdNgAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAFk2AAAAAAAAWjYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWTYAAAAAAABZNgAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAFo2AAAAAAAAXDYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWjYAAAAAAABaNgAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AQAAAFs2AAAAAAAAXDYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWzYAAAAAAABbNgAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"insert_completion",
					{
						"completion": "cfg",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "cfg"
					},
					"AgAAAFs2AAAAAAAAWzYAAAAAAAABAAAAY1s2AAAAAAAAXjYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXDYAAAAAAABcNgAAAAAAAAAAAAAAAPC/"
				],
				[
					106,
					1,
					"cut",
					null,
					"AQAAAFE2AAAAAAAAUTYAAAAAAAAPAAAAICAgICAgICAjW2NmZ10K",
					"AQAAAAAAAAABAAAAXjYAAAAAAABeNgAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					1,
					"left_delete",
					null,
					"AQAAAE82AAAAAAAATzYAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAUDYAAAAAAABQNgAAAAAAAAAAAAAAYGRA"
				]
			]
		},
		{
			"file": "/Users/rapha/Documents/a/rio/frontends/rioterm/src/context/mod.rs",
			"settings":
			{
				"buffer_size": 40091,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					7,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"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"
				],
				[
					8,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"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"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Install Package Control"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/rapha/Documents/a/rio",
		"/Users/rapha/Documents/a/rio/.cargo",
		"/Users/rapha/Documents/a/rio/.github",
		"/Users/rapha/Documents/a/rio/.github/workflows",
		"/Users/rapha/Documents/a/rio/docs",
		"/Users/rapha/Documents/a/rio/frontends",
		"/Users/rapha/Documents/a/rio/frontends/rioterm",
		"/Users/rapha/Documents/a/rio/frontends/rioterm/src",
		"/Users/rapha/Documents/a/rio/frontends/rioterm/src/bindings",
		"/Users/rapha/Documents/a/rio/frontends/rioterm/src/context",
		"/Users/rapha/Documents/a/rio/sugarloaf",
		"/Users/rapha/Documents/a/rio/sugarloaf/examples",
		"/Users/rapha/Documents/a/rio/sugarloaf/src",
		"/Users/rapha/Documents/a/rio/sugarloaf/src/components",
		"/Users/rapha/Documents/a/rio/sugarloaf/src/components/rich_text",
		"/Users/rapha/Documents/a/rio/sugarloaf/src/context",
		"/Users/rapha/Documents/a/rio/sugarloaf/src/layout",
		"/Users/rapha/Documents/a/rio/sugarloaf/src/sugarloaf",
		"/Users/rapha/Documents/a/rio/sugarloaf/src/sugarloaf/compositors",
		"/Users/rapha/Documents/a/rio/teletypewriter"
	],
	"file_history":
	[
		"/Users/rapha/Documents/a/rio/Cargo.toml",
		"/Users/rapha/Documents/a/rio/.goreleaser.yaml",
		"/Users/rapha/Documents/a/rio/.cargo/config.toml",
		"/Users/rapha/Documents/a/rio/.github/workflows/nix-build.yml",
		"/Users/rapha/Documents/a/rio/docs/docs/default-key-bindings.md",
		"/Users/rapha/Documents/a/rio/misc/osx/Rio.app/Contents/Info.plist",
		"/Users/rapha/Documents/a/rio/misc/windows/rio-x86_64.wxs",
		"/Users/rapha/Documents/a/rio/misc/windows/rio-aarch64.wxs",
		"/Users/rapha/Documents/a/rio/sugarloaf/src/font_introspector/setting.rs",
		"/Users/rapha/Documents/a/rio/sugarloaf/src/font_introspector/scale/bitmap/png.rs",
		"/Users/rapha/Documents/a/rio/rio-window/src/platform_impl/macos/event.rs",
		"/Users/rapha/Documents/a/rio/rio-window/src/platform_impl/macos/appkit/event.rs",
		"/Users/rapha/Documents/a/rio/rio-window/src/platform_impl/windows/keyboard.rs",
		"/Users/rapha/Documents/a/sugarloaf/examples/text_with_doubled_line_height.rs",
		"/Users/rapha/Documents/a/rio/rio-window/src/platform_impl/macos/window_delegate.rs",
		"/Users/rapha/Documents/a/rio/docs/docs/releases.md",
		"/Users/rapha/Documents/a/rio/rio-window/src/platform_impl/macos/appkit/cursor.rs",
		"/Users/rapha/Documents/a/rio/rio-window/src/platform_impl/macos/cursor.rs",
		"/Users/rapha/Documents/a/rio/rio-window/src/platform_impl/linux/common/xkb/keymap.rs",
		"/Users/rapha/Documents/a/rio/corcovado/src/poll.rs",
		"/Users/rapha/Documents/a/rio/corcovado/src/stream.rs",
		"/Users/rapha/Documents/a/rio/corcovado/src/sys/unix/io.rs",
		"/Users/rapha/Documents/a/rio/copa/src/lib.rs",
		"/Users/rapha/Documents/a/rio/corcovado/src/sys/unix/eventedfd.rs",
		"/Users/rapha/Documents/a/rio/corcovado/src/timer.rs",
		"/Users/rapha/Documents/a/rio/corcovado/test/mod.rs",
		"/Users/rapha/Documents/a/rio/teletypewriter/src/unix/mod.rs",
		"/Users/rapha/Documents/a/rio/rio-backend/src/config/colors/term.rs",
		"/Users/rapha/Documents/a/rio/rio-backend/src/crosswords/grid/mod.rs",
		"/Users/rapha/Documents/a/rio/rio-backend/src/crosswords/search.rs",
		"/Users/rapha/Documents/a/rio/rio-backend/src/crosswords/mod.rs",
		"/Users/rapha/Documents/a/rio/frontends/rioterm/src/bindings/mod.rs",
		"/Users/rapha/Documents/a/rio/frontends/rioterm/src/screen/hint.rs",
		"/Users/rapha/Documents/a/rio/frontends/rioterm/Cargo.toml",
		"/Users/rapha/Documents/a/rio/sugarloaf/Cargo.toml",
		"/Users/rapha/Documents/a/rio/sugarloaf/src/layout/render_data.rs",
		"/Users/rapha/Documents/a/rio/sugarloaf/src/components/text/glyph/section/refed.rs",
		"/Users/rapha/Documents/a/rio/sugarloaf/src/components/rich_text/image_cache/cache.rs",
		"/Users/rapha/Documents/a/rio/sugarloaf/src/components/rich_text/image_cache/glyph.rs",
		"/Users/rapha/Documents/a/rio/sugarloaf/src/components/text/builder.rs",
		"/Users/rapha/Documents/a/rio/Makefile",
		"/Users/rapha/Documents/a/rio/rio-backend/src/config/keyboard.rs",
		"/Users/rapha/Documents/a/rio/docs/docs/install/macos.md",
		"/Users/rapha/Documents/a/rio/docs/docs/install/windows.md",
		"/Users/rapha/Documents/a/rio/sugarloaf/src/font/mod.rs",
		"/Users/rapha/Documents/a/rio/sugarloaf/src/sugarloaf/compositors/advanced.rs",
		"/Users/rapha/Documents/a/rio/sugarloaf/src/layout/builder.rs",
		"/Users/rapha/Documents/a/rio/sugarloaf/src/font_introspector/internal/head.rs",
		"/Users/rapha/Documents/a/rio/.github/workflows/nightly.yml",
		"/Users/rapha/Documents/a/rio/sugarloaf/src/sugarloaf/state.rs",
		"/Users/rapha/.config/rio/config.toml",
		"/Users/rapha/Documents/a/rio/NOTES",
		"/Users/rapha/Documents/a/rio/frontends/rioterm/src/screen/mod.rs",
		"/Users/rapha/Documents/a/rio/frontends/rioterm/src/sequencer.rs",
		"/Users/rapha/Documents/a/rio/sugarloaf/src/components/rich_text/text.rs",
		"/Users/rapha/Documents/a/rio/sugarloaf/src/layout/layout_data.rs",
		"/Users/rapha/Documents/a/rio/sugarloaf/src/components/rich_text/mod.rs",
		"/Users/rapha/Documents/a/rio/sugarloaf/src/components/rich_text/compositor.rs",
		"/Users/rapha/Documents/a/rio/sugarloaf/src/font/fallbacks/mod.rs",
		"/Users/rapha/Documents/a/rio/frontends/rioterm/src/main.rs",
		"/Users/rapha/Documents/a/rio/frontends/rioterm/src/ui/appkit/global.rs",
		"/Users/rapha/Documents/a/rio/frontends/rioterm/src/ui/appkit/menu.rs",
		"/Users/rapha/Documents/a/rio/frontends/rioterm/src/ui/appkit/menubar.rs",
		"/Users/rapha/Documents/a/rio/frontends/rioterm/src/router/window/mod.rs",
		"/Users/rapha/Documents/a/winit/src/platform/macos.rs",
		"/Users/rapha/Documents/a/rio/frontends/rioterm/src/ui/mod.rs",
		"/Users/rapha/Documents/a/rio/frontends/rioterm/src/ui/appkit/mod.rs",
		"/Users/rapha/Documents/a/rio/frontends/rioterm/src/ui/appkit/menuitem.rs",
		"/Users/rapha/Documents/a/rio/frontends/rioterm/src/app/menu/macos.rs",
		"/Users/rapha/Documents/a/rio/frontends/rioterm/src/context.rs",
		"/Users/rapha/Documents/a/rio/frontends/rioterm/src/app/route.rs",
		"/Users/rapha/Documents/a/rio/frontends/rioterm/src/router/mod.rs",
		"/Users/rapha/Documents/a/rio/CHANGELOG.md",
		"/Users/rapha/Documents/a/rio/.gitignore",
		"/Users/rapha/Documents/a/rio/misc/windows/rio.wxs",
		"/Users/rapha/Documents/a/rio/.github/workflows/release.yml",
		"/Users/rapha/Documents/a/rio/rio-backend/src/crosswords/grid/row.rs",
		"/Users/rapha/Documents/a/rio/rio-backend/Cargo.toml",
		"/Users/rapha/Documents/a/rio/rio-backend/src/config/window.rs",
		"/Users/rapha/Documents/a/rio/rio-backend/src/event/mod.rs",
		"/Users/rapha/Documents/a/rio/sugarloaf/src/sugarloaf/primitives.rs",
		"/Users/rapha/Documents/a/rio/wa/src/native/macos.rs",
		"/Users/rapha/Documents/a/rio/frontends/rioterm/src/state/mod.rs",
		"/Users/rapha/Documents/a/rio/frontends/rioterm/src/platform/mod.rs",
		"/Users/rapha/Documents/a/rio/rio-backend/src/crosswords/vi_mode.rs",
		"/Users/rapha/Documents/a/rio/rio-backend/src/selection.rs",
		"/Users/rapha/Documents/a/rio/frontends/rioterm/src/routes/mod.rs",
		"/Users/rapha/Documents/a/rio/frontends/rioterm/src/scheduler.rs",
		"/Users/rapha/Documents/a/rio/frontends/rioterm/src/constants.rs",
		"/Users/rapha/Documents/a/rio/frontends/rioterm/src/watcher.rs",
		"/Users/rapha/Documents/a/rio/frontends/rioterm/src/mouse/mod.rs",
		"/Users/rapha/Documents/a/rio/frontends/cross-winit/src/screen/mod.rs",
		"/Users/rapha/Documents/a/rio/sugarloaf/src/context/mod.rs",
		"/Users/rapha/Documents/a/rio/sugarloaf/src/sugarloaf.rs",
		"/Users/rapha/Documents/a/rio/frontends/rioterm/src/routes/assistant.rs",
		"/Users/rapha/Documents/a/rio/frontends/rioterm/src/routes/dialog.rs",
		"/Users/rapha/Documents/a/rio/sugarloaf/src/layout/mod.rs",
		"/Users/rapha/Documents/a/rio/frontends/rioterm/src/routes/welcome.rs",
		"/Users/rapha/Documents/a/rio/frontends/rioterm/src/app/mod.rs",
		"/Users/rapha/Documents/a/rio/frontends/rioterm/src/state/navigation.rs",
		"/Users/rapha/Documents/a/rio/sugarloaf/src/graphics.rs",
		"/Users/rapha/Documents/a/rio/sugarloaf/src/components/layer/mod.rs",
		"/Users/rapha/Documents/a/rio/sugarloaf/src/core.rs",
		"/Users/rapha/Documents/a/rio/sugarloaf/src/lib.rs",
		"/Users/rapha/Documents/a/rio/rio-backend/src/ansi/sixel.rs",
		"/Users/rapha/Documents/a/rio/rio-backend/src/ansi/graphics.rs",
		"/Users/rapha/Documents/a/rio/rio-backend/src/performer/handler.rs",
		"/Users/rapha/Documents/a/rio/sugarloaf/src/components/text/mod.rs",
		"/Users/rapha/Documents/a/rio/sugarloaf/src/components/core/mod.rs",
		"/Users/rapha/Documents/a/rio/sugarloaf/src/components/text/pipeline.rs",
		"/Users/rapha/Documents/a/rio/sugarloaf/src/components/rect/mod.rs",
		"/Users/rapha/Documents/a/rio/sugarloaf/src/components/text/glyph/layout/font.rs",
		"/Users/rapha/Documents/a/rio/sugarloaf/src/glyph/layout/font.rs",
		"/Users/rapha/Documents/a/rio/wa/src/event.rs",
		"/Users/rapha/Documents/a/rio/sugarloaf/src/components/rich_text/image_cache/mod.rs",
		"/Users/rapha/Documents/a/rio/sugarloaf/src/sugarloaf/tree.rs",
		"/Users/rapha/Documents/a/rio/wa/src/native.rs",
		"/Users/rapha/Documents/a/rio/wa/src/lib.rs",
		"/Users/rapha/Documents/a/rio/wa/src/app/macos.rs",
		"/Users/rapha/Documents/a/rio/corcovado/src/sys/unix/mod.rs",
		"/Users/rapha/Documents/a/rio/corcovado/src/lib.rs",
		"/Users/rapha/Documents/a/rio/docs/versioned_docs/version-0.0.x/install/macos.md",
		"/Users/rapha/Documents/a/rio/sugarloaf/src/components/rich_text/util/atomic.rs",
		"/Users/rapha/Documents/a/rio/rust-toolchain.toml",
		"/Users/rapha/Documents/a/rio/sugarloaf/src/font/loader/mod.rs",
		"/Users/rapha/Documents/a/rio/corcovado/src/io.rs",
		"/Users/rapha/Documents/a/rio/sugarloaf/src/font/fonts.rs",
		"/Users/rapha/Documents/a/rio/corcovado/src/sys/unix/uio.rs"
	],
	"find":
	{
		"height": 43.0
	},
	"find_in_files":
	{
		"height": 104.0,
		"where_history":
		[
			"/Users/rapha/Documents/a/rio/sugarloaf/src,<project filters>",
			"/Users/rapha/Documents/a/rio/sugarloaf/src/layout,<project filters>",
			"/Users/rapha/Documents/a/rio/sugarloaf/src/components/rich_text,<project filters>",
			"/Users/rapha/Documents/a/rio/sugarloaf/src/layout,<project filters>",
			"/Users/rapha/Documents/a/rio/sugarloaf,<project filters>",
			"/Users/rapha/Documents/a/rio/frontends,<project filters>",
			"/Users/rapha/Documents/a/rio,<project filters>",
			"/Users/rapha/Documents/a/rio/rio-backend,<project filters>",
			"/Users/rapha/Documents/a/rio/frontends/rioterm/src,<project filters>",
			"/Users/rapha/Documents/a/rio/sugarloaf/src/components,<project filters>",
			"/Users/rapha/Documents/a/rio/wa/src,<project filters>",
			"/Users/rapha/Documents/a/rio/sugarloaf/src,<project filters>",
			"/Users/rapha/Documents/a/rio/sugarloaf/src/components,<project filters>",
			"/Users/rapha/Documents/a/rio/sugarloaf/src,<project filters>",
			"/Users/rapha/Documents/a/rio/sugarloaf/src/components,<project filters>",
			"/Users/rapha/Documents/a/rio/sugarloaf/src,<project filters>",
			"/Users/rapha/Documents/a/rio/corcovado/src,<project filters>"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"create_mock_context",
			"create_mock_context(",
			"create_mock_context",
			"{},\n",
			"request_resize",
			"val.me",
			"val.",
			"request_resize",
			"messenger",
			"self.inner[index].val.messenger",
			"request_resize",
			"test",
			"request_resize",
			"resize",
			"test_resize",
			"Toggle VI Mode ",
			"ToggleViMode",
			"platform_key_bindings",
			"ToggleViMode",
			"SearchForward",
			"ToggleViMode",
			"free",
			"check",
			"draw_layout",
			"SugarCursor",
			"cursor",
			"FragmentStyleDecoration",
			"layout",
			"update_dimensions",
			"dimensions",
			"fetch_dimensions",
			"line_height",
			"ascent",
			"fetch_dimensions",
			"rect",
			"line_h",
			"2.2",
			"<T: Copy>",
			"try_cursor_from_selector",
			"et cls = NSCursor::class();",
			"'a, ",
			"a, ",
			"rio",
			"0xa",
			"KeyCode::KeyV => Some(0x09),",
			"contentRectForFrameRect",
			"surface_position",
			"v0.2.0",
			"0.2.1",
			"x86_64",
			"1.15",
			"clear",
			"IS_MACOS",
			"quan",
			"famil",
			"SugarTree",
			"current",
			" as usize",
			"HashMap",
			"HashSet<i16>",
			"promoted",
			"fonts_to_load",
			"FontSource::Extension",
			"id",
			"isbn",
			"promote",
			"HashSet",
			"Vec<i16>",
			"Vec",
			"shape",
			"shape_item",
			"upsert",
			"HashSet",
			"<usi",
			"fonts_to_load",
			"Vec<(usize, PathBuf)>",
			"Vec<(",
			"Vec<",
			".clone()",
			"font_data",
			"fallbacks",
			"fonts_to_load",
			"scale =",
			"needs_bidi",
			"last_offset",
			"needs_bidi",
			"resolve",
			"RenderData",
			"render_data",
			"as u32",
			"u32, PathBuf",
			"u32",
			"load_from_font_source",
			"PathBuf",
			"Vec<u32>",
			"HashSet",
			"fonts_to_load",
			"u32",
			"HashSet",
			"[u32]",
			"fonts_to_load",
			"ParagraphBuilder",
			"FontDataExtensionVal",
			"render_data",
			"process_from_cache",
			"next_",
			"Borrow",
			"Cow",
			"IndexMut",
			"font_by_id",
			"as_ref",
			"arc<",
			"unwrap(",
			"font_data_extension",
			"FontLibraryData",
			"FontLibrary",
			"Font",
			"[",
			"load_from_font_source",
			"font_data_extension",
			"load_from_font_source",
			"load_fon",
			"droppa",
			"hit",
			"FontLibrary",
			"FontDataExtension",
			"Lazy",
			"data:"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"use_wa"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"folders":
	[
		{
			"path": "/Users/rapha/Documents/a/rio"
		}
	],
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/Users/rapha/Documents/a/rio/NOTES",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 565,
						"regions":
						{
						},
						"selection":
						[
							[
								115,
								115
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/Users/rapha/Documents/a/rio/sugarloaf/src/components/rich_text/mod.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22099,
						"regions":
						{
						},
						"selection":
						[
							[
								16860,
								16860
							]
						],
						"settings":
						{
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/Users/rapha/Documents/a/rio/pkgRio.nix",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2578,
						"regions":
						{
						},
						"selection":
						[
							[
								61,
								61
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/Users/rapha/Documents/a/rio/sugarloaf/examples/line_height.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11510,
						"regions":
						{
						},
						"selection":
						[
							[
								11510,
								11510
							]
						],
						"settings":
						{
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/Users/rapha/Documents/a/rio/sugarloaf/src/layout/content.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19461,
						"regions":
						{
						},
						"selection":
						[
							[
								785,
								796
							],
							[
								5883,
								5894
							]
						],
						"settings":
						{
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/Users/rapha/Documents/a/rio/sugarloaf/src/lib.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 718,
						"regions":
						{
						},
						"selection":
						[
							[
								336,
								336
							]
						],
						"settings":
						{
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/Users/rapha/Documents/a/rio/sugarloaf/Cargo.toml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6744,
						"regions":
						{
						},
						"selection":
						[
							[
								496,
								500
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/Users/rapha/Documents/a/rio/frontends/rioterm/src/bindings/mod.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 64085,
						"regions":
						{
						},
						"selection":
						[
							[
								18425,
								18321
							]
						],
						"settings":
						{
							"allow_quiet_save": true,
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 28.5,
						"translation.y": 12550.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/Users/rapha/Documents/a/rio/frontends/rioterm/src/context/grid.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 122996,
						"regions":
						{
						},
						"selection":
						[
							[
								84155,
								84174
							]
						],
						"settings":
						{
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 52336.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "/Users/rapha/Documents/a/rio/frontends/rioterm/src/context/mod.rs",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 40091,
						"regions":
						{
						},
						"selection":
						[
							[
								5419,
								5438
							]
						],
						"settings":
						{
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4076.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 31.0
	},
	"input":
	{
		"height": 43.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "",
	"replace":
	{
		"height": 58.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"docs/docs/default-key-bindings.md",
				"docs/docs/default-key-bindings.md"
			],
			[
				"Cargo.toml",
				"Cargo.toml"
			],
			[
				".cargo/config.toml",
				".cargo/config.toml"
			],
			[
				"scale/bitmap/png.rs",
				"sugarloaf/src/font_introspector/scale/bitmap/png.rs"
			],
			[
				"setting",
				"sugarloaf/src/font_introspector/setting.rs"
			],
			[
				"macos/cu",
				"rio-window/src/platform_impl/macos/cursor.rs"
			],
			[
				"appkit/cursor.rs",
				"rio-window/src/platform_impl/macos/appkit/cursor.rs"
			],
			[
				"xkb/keymap.rs",
				"rio/rio-window/src/platform_impl/linux/common/xkb/keymap.rs"
			],
			[
				"macos/eve",
				"rio/rio-window/src/platform_impl/macos/event.rs"
			],
			[
				"appkit/event.rs",
				"rio/rio-window/src/platform_impl/macos/appkit/event.rs"
			],
			[
				"windows/keyboard.rs",
				"rio/rio-window/src/platform_impl/windows/keyboard.rs"
			],
			[
				"awindow_delegate.rs",
				"rio/rio-window/src/platform_impl/macos/window_delegate.rs"
			],
			[
				"grid/ro",
				"rio-backend/src/crosswords/grid/row.rs"
			],
			[
				"grid/mod",
				"rio-backend/src/crosswords/grid/mod.rs"
			],
			[
				"",
				"frontends/rioterm/src/app/mod.rs"
			],
			[
				"rich_text/uti",
				"sugarloaf/src/components/rich_text/util/atomic.rs"
			],
			[
				"corcovado/src/po",
				"corcovado/src/poll.rs"
			],
			[
				"context/m",
				"sugarloaf/src/context/mod.rs"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 299.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
